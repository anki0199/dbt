-- Create Worker table
CREATE TABLE Worker (
    WORKER_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    SALARY INT,
    JOINING_DATE DATETIME,
    DEPARTMENT VARCHAR(255)
);

-- Insert data into Worker table
INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT)
VALUES
(1, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR'),
(2, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin'),
(3, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR'),
(4, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin'),
(5, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin'),
(6, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account'),
(7, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account'),
(8, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');


-- Create Bonus table
CREATE TABLE Bonus (
    WORKER_REF_ID INT,
    BONUS_DATE DATETIME,
    BONUS_AMOUNT INT,
	FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

-- Insert data into Bonus table
INSERT INTO Bonus (WORKER_REF_ID, BONUS_DATE, BONUS_AMOUNT)
VALUES
(1, '2016-02-20 00:00:00', 5000),
(2, '2016-06-11 00:00:00', 3000),
(3, '2016-02-20 00:00:00', 4000),
(1, '2016-02-20 00:00:00', 4500),
(2, '2016-06-11 00:00:00', 3500);


-- Create Title table
CREATE TABLE Title (
    WORKER_REF_ID INT,
    WORKER_TITLE VARCHAR(255),
    AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

-- Insert data into Title table
INSERT INTO Title (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM)
VALUES
(1, 'Manager', '2016-02-20 00:00:00'),
(2, 'Executive', '2016-06-11 00:00:00'),
(8, 'Executive', '2016-06-11 00:00:00'),
(5, 'Manager', '2016-06-11 00:00:00'),
(4, 'Asst. Manager', '2016-06-11 00:00:00'),
(7, 'Executive', '2016-06-11 00:00:00'),
(6, 'Lead', '2016-06-11 00:00:00'),
(3, 'Lead', '2016-06-11 00:00:00');


------------------------------------------------------------------------------------------
1.
SELECT FIRST_NAME AS WORKER_NAME FROM Worker;
2.
SELECT UPPER(FIRST_NAME) FROM Worker;
3.
SELECT DISTINCT DEPARTMENT FROM Worker;
4.
SELECT LEFT(FIRST_NAME, 3) FROM Worker;
5.
SELECT POSITION('a' IN FIRST_NAME) FROM Worker WHERE FIRST_NAME = 'Amitabh';
6.
SELECT * FROM Worker ORDER BY FIRST_NAME ASC;
7.
SELECT * FROM Worker ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;
8.
SELECT * FROM Worker WHERE FIRST_NAME IN ('Vipul', 'Satish');
9.
SELECT * FROM Worker WHERE FIRST_NAME NOT IN ('Vipul', 'Satish');
10.
SELECT * FROM Worker WHERE DEPARTMENT = 'Admin';
11.
SELECT * FROM Worker WHERE FIRST_NAME LIKE '%a%';
12.
SELECT * FROM Worker WHERE FIRST_NAME LIKE '%a';
13.
SELECT * FROM Worker WHERE FIRST_NAME LIKE '______h';
14.
SELECT * FROM Worker WHERE SALARY BETWEEN 100000 AND 500000;
15.
SELECT * FROM Worker WHERE EXTRACT(YEAR_MONTH FROM JOINING_DATE) = '201402';
16.
SELECT COUNT(*) FROM Worker WHERE DEPARTMENT = 'Admin';
17.
SELECT FIRST_NAME FROM Worker WHERE SALARY BETWEEN 50000 AND 100000;
18.
SELECT DEPARTMENT, COUNT(*) AS NUM_WORKERS FROM Worker GROUP BY DEPARTMENT ORDER BY NUM_WORKERS DESC;
19.
SELECT * FROM Worker w JOIN Title t ON w.WORKER_ID = t.WORKER_REF_ID WHERE t.WORKER_TITLE = 'Manager';
20.
SELECT * FROM Worker w1, Worker w2 WHERE w1.WORKER_ID != w2.WORKER_ID AND w1.FIRST_NAME = w2.FIRST_NAME AND w1.LAST_NAME = w2.LAST_NAME;
21.
SELECT * FROM (SELECT *, ROW_NUMBER() OVER () AS RowNum FROM Worker) AS SubQuery WHERE RowNum % 2 <> 0;
22.
SELECT * FROM (SELECT *, ROW_NUMBER() OVER () AS RowNum FROM Worker) AS SubQuery WHERE RowNum % 2 = 0;
23.
CREATE TABLE NewTable AS SELECT * FROM OldTable;
24.
SELECT * FROM Table1 INTERSECT SELECT * FROM Table2;
25.
SELECT * FROM Table1 WHERE NOT EXISTS (SELECT * FROM Table2 WHERE Table1.ID = Table2.ID);
26.
SELECT * FROM Worker LIMIT 10;
27.
SELECT SALARY, COUNT(*) AS NUM_EMPLOYEES FROM Worker GROUP BY SALARY HAVING COUNT(*) > 1;
28.
SELECT DISTINCT SALARY FROM Worker ORDER BY SALARY DESC LIMIT 1 OFFSET 1;
29.
SELECT * FROM Table1 WHERE EXISTS (SELECT * FROM Table2 WHERE Table1.ID = Table2.ID);
30.
SELECT * FROM Worker LIMIT (SELECT COUNT(*) * 0.5 FROM Worker);
31.
SELECT DEPARTMENT, COUNT(*) AS NUM_EMPLOYEES FROM Worker GROUP BY DEPARTMENT HAVING NUM_EMPLOYEES < 5;
32.
SELECT DEPARTMENT, COUNT(*) AS NUM_EMPLOYEES FROM Worker GROUP BY DEPARTMENT;
33.
SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 1;
34.
SELECT * FROM Worker LIMIT 1;
35.
SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 5;
36.
SELECT w.DEPARTMENT, w.FIRST_NAME, w.LAST_NAME, w.SALARY
FROM Worker w
JOIN (
    SELECT DEPARTMENT, MAX(SALARY) AS MaxSalary
    FROM Worker
    GROUP BY DEPARTMENT
) maxsal ON w.DEPARTMENT = maxsal.DEPARTMENT AND w.SALARY = maxsal.MaxSalary;
----------------------------------------------------------------------------
SELECT DEPARTMENT, FIRST_NAME, LAST_NAME, SALARY
FROM (
  SELECT DEPARTMENT, FIRST_NAME, LAST_NAME, SALARY,
    ROW_NUMBER() OVER (PARTITION BY DEPARTMENT ORDER BY SALARY DESC) AS RowNum
  FROM Worker
) AS Subquery
WHERE RowNum = 1;
37.
SELECT DISTINCT SALARY
FROM Worker
ORDER BY SALARY DESC
LIMIT 3;
38.
SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY
FROM Worker
GROUP BY DEPARTMENT;
39.
SELECT FIRST_NAME, LAST_NAME
FROM Worker
WHERE SALARY = (SELECT MAX(SALARY) FROM Worker);







